exit
c
args
args.detect { |arg| arg.is_a? Symbol }
args.detect { |arg| arg.is_a? Symbol }.map(&:to_s)
args.detect { |arg| arg.is_a? Symbol }.join ' '
args.detect { |arg| arg.is_a? Symbol }
args
c
argument.map { |k, v| "#{k}: #{get_arg_value_str(v)}" }
argument
args
c
next
nex
Graphlient.config.graphql_endpoint
c
Graphlient.config.graphql_endpoint
query.to_s
c
&block
args
m
c
n
&block
args
m
c
send(m, *args, &block)
send(m, args, &block)
&block
block
args
m
